{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/call-number/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;;;IA+BxC,8BAAiB;;;;IAC/C;;;;;OAKG;;;;;;;IAIH,+BAAU;;;;;;cAAC,YAAoB,EAAE,gBAAyB;QACxD,MAAM,CAAC;KACR;IAED;;;OAGG;;;;;IAEH,oCAAe;;;;;QACb,MAAM,CAAC;KACR;;gBAtBF,UAAU;;;QAQR,OAAO,CAAC;YACP,aAAa,EAAE,SAAS;SACzB,CAAC;;;;gDAGD;;QAMA,OAAO,EAAE;;;;qDAGT;;;;;;;;;;;;;;;;;;;;;;IArBU,UAAU;QARtB,MAAM,CAAC;YACN,UAAU,EAAE,YAAY;YACxB,MAAM,EAAE,aAAa;YACrB,SAAS,EAAE,oBAAoB;YAC/B,IAAI,EAAE,qDAAqD;YAC3D,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;OAEW,UAAU,EAsBtB;qBAtDD;EAgCgC,iBAAiB;SAApC,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\n/**\n * @name Call Number\n * @description\n * Call a number directly from your Cordova/Ionic application.\n * **NOTE**: The iOS Simulator (and maybe Android Simulators) do not provide access to the phone subsystem.\n *\n * @usage\n * ```typescript\n * import { CallNumber } from '@ionic-native/call-number';\n *\n * constructor(private callNumber: CallNumber) { }\n *\n * ...\n *\n *\n * this.callNumber.callNumber(\"18001010101\", true)\n *   .then(res => console.log('Launched dialer!', res))\n *   .catch(err => console.log('Error launching dialer', err));\n *\n * ```\n */\n@Plugin({\n  pluginName: 'CallNumber',\n  plugin: 'call-number',\n  pluginRef: 'plugins.CallNumber',\n  repo: 'https://github.com/Rohfosho/CordovaCallNumberPlugin',\n  platforms: ['Android', 'iOS']\n})\n@Injectable()\nexport class CallNumber extends IonicNativePlugin {\n  /**\n   * Calls a phone number\n   * @param {string} numberToCall The phone number to call as a string\n   * @param {boolean} bypassAppChooser Set to true to bypass the app chooser and go directly to dialer\n   * @return {Promise<any>}\n   */\n  @Cordova({\n    callbackOrder: 'reverse'\n  })\n  callNumber(numberToCall: string, bypassAppChooser: boolean): Promise<any> {\n    return;\n  }\n\n  /**\n   * Check if call feature is available\n   * @return {Promise<any>}\n   */\n  @Cordova()\n  isCallSupported(): Promise<any> {\n    return;\n  }\n}\n"]}